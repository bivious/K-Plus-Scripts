################################################################################
#
#   This file is part of the PM Manager Addon
#   Copyright (C) 2017 slaboff (slaboff at no mail dot not)
#
#   This program is FREE software. You can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 2
#   of the License, or (at your option) any later version.
#
#   This program is distributed in the HOPE that it will be USEFUL,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#   See the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, write to the Free Software Foundation,
#   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
################################################################################

defpopup(QUPM.users)
{
	prologue
	{
		if(!$objects.exists(%G_qupmManager))
		{
			%G_qupmManager = $new(qupm::main)
			%G_qupmManager->$hide()
		}
		else
		{
			%G_qupmManager->$hide()
		}

		%:MyNick = $false
		if($my.nick == $0)
			%:MyNick = $true;

		%:UserValid = $false
		for(%i = 0; %i < %G_pmWhiteList[]#; %i++)
		{
			if(%G_pmWhiteList[%i] == $0)
			{
				%:UserValid == $true
				break;
			}
		}

		if(%G_pmTmpUser != $null)
			%:isInTemplist = %G_pmTmpUser

		%:ownNickLabelText = "<p>Own Nick: <b>$0</b> - Nothing to do!</p>"
	}

	item(Add $0 to Whitelist, $icon(plus)) (!%:UserValid && %G_pmTmpUser != $0 && !%:MyNick)
	{
		%G_pmWhiteList[] <+ $0
		%update = %G_qupmManager->$updateList()
		if(%update == $true)
		{
			echo -w=$active -i=$msgtype(GenericStatus) "Notice: The nick $b$0$b has been successfully added to your whitelist."
			%:UserValid = $true
			unset %G_qupmManager
		}
		unset %G_qupmManager
	}

	item(Remove $0 from Whitelist, $icon(minus)) (%:UserValid && !%:MyNick)
	{
		foreach(%user, %G_pmWhiteList)
		{
			if(%user != $0)
				%temp_wl[] <+ %user
		}

		unset %G_pmWhiteList
		for(%i = 0; %i < %temp_wl[]#; %i++)
		{
			%G_pmWhiteList[] <+ %temp_wl[%i]
		}

		%update = %G_qupmManager->$updateList()
		if(%update == $true)
		{
			echo -w=$active -i=$msgtype(GenericWarning) "Notice: The nick $b$0$b has been successfully removed from your whitelist."
			%:UserValid = $false
			unset %G_qupmManager
		}
		unset %G_qupmManager
	}

	item(Add $0 As Temporary User, $icon(join)) (!%G_pmTmpUser && !%:UserValid && !%:MyNick)
	{
		%G_pmTmpUser = $0
		echo -w=$active -i=$msgtype(GenericStatus) "Notice: The user $b$0$b has been successfully added to your temporary whitelist."
		unset %G_qupmManager
	}

	item(Remove $0 As Temporary User, $icon(part)) (%G_pmTmpUser == $0 && !%:UserValid && !%:MyNick)
	{
		%G_pmTmpUser = $false
		echo -w=$active -i=$msgtype(GenericWarning) "Notice: The user $b$0$b has been successfully removed from your temporary whitelist."
		unset %G_qupmManager
	}

	item(Add $0 to Whitelist, $icon(plus)) (%:isValidWindow && !%:UserValid && %G_pmTmpUser != $0 && !%:MyNick)
	{
		%G_pmWhiteList[] <+ $0

		%:isValidWindow = $false
		if((($window.type == "query") && ($window.type == "channel") && (%:UserValid == $true)))
			%:isValidWindow = $true

		%update = %G_qupmManager->$updateList()
		if(%update == $true)
		{
			echo -w=$active -i=$msgtype(GenericStatus) "Notice: The nick $b$0$b has been successfully added to your whitelist."
			%:UserValid = $true
		}
		unset %G_qupmManager
	}

	item(Remove %:isInTemplist As Temporary User, $icon(part)) (%:isInTemplist && %G_pmTmpUser != $0 && !%:UserValid && !%:MyNick)
	{
		%G_pmTmpUser = $false
		echo -w=$active -i=$msgtype(GenericWarning) "Notice: The user $b%:isInTemplist$b has been successfully removed from your temporary whitelist."
		unset %G_qupmManager
	}

	item(Replace User: %:isInTemplist with User: $0 As Temporary User, $icon(update)) (%:isInTemplist && %G_pmTmpUser != $0 && !%:UserValid && !%:MyNick)
	{
		%G_pmTmpUser = $false
		%G_pmTmpUser = $0
		echo -w=$active -i=$msgtype(GenericStatus) "Notice: The user $b$0$b has successfully replaced $b%:isInTemplist$b as a temporary whitelisted user."
		unset %G_qupmManager
	}

	item(Remove $0 As Temporary User and Add to Whitelist, $icon(refresh)) (%:isInTemplist && !%:UserValid && %G_pmTmpUser == $0 && !%:MyNick)
	{
		%G_pmTmpUser = $false
		%G_pmWhiteList[] <+ $0
		%update = %G_qupmManager->$updateList()

		if(%update == $true)
		{
			echo -w=$active -i=$msgtype(GenericWarning) "Notice: The nick $b$0$b has been successfully removed as a temporary user and added to your whitelist."
			%:UserValid = $true
		}
		unset %G_qupmManager
	}

	label(%:ownNickLabelText) (%:MyNick)
}

popup.delitem -q channel QUPM.separator0
popup.delitem -q querytextview QUPM.separator0
popup.addSeparator channel QUPM.separator0
popup.addSeparator querytextview QUPM.separator0
popup.delitem -q channel QUPM.users
popup.delitem -q querytextview QUPM.users
# We $escape the path else the KVS interpreter will strip the single slash when context menu is called in Windows
popup.addExtPopup channel QUPM.users "PM Manager" $escape($file.localdir(pics/pmmanager_small.png)) QUPM.users
popup.addExtPopup querytextview QUPM.users "PM Manager" $escape($file.localdir(pics/pmmanager_small.png)) QUPM.users

defpopup(QUPM.controls)
{
	prologue
	{
		%:Blocked = $isEventEnabled(OnQueryMessage,blockPM)
	}

	item(Open PM Manager, $icon(query))
	{
		if(!$objects.exists(%G_qupmManager))
		{
			%G_qupmManager = $new(qupm::main)
			%G_qupmManager->$show()
		}
		else
		{
			%G_qupmManager->$hide()
			%G_qupmManager->$show()
		}
	}

	item(Enable PM Blocker, $icon(accept)) (!%:Blocked)
	{
		eventctl -e OnQueryMessage blockPM
		echo -w=$window(%winid) -i=$msgtype(GenericSuccess) "Notice: The PM blocker has been successfully enabled!"
	}

	item(Disable PM Blocker, $icon(discard)) (%:Blocked)
	{
		eventctl -d OnQueryMessage blockPM
		echo -w=$window(%winid) -i=$msgtype(GenericWarning) "Notice: The PM blocker has been successfully disabled!"
	}

	separator

	item(Help, $icon(questionmark))
	{
		help.open -m $file.localdir("help/pmm-help.html")
	}
}
popup.delitem -q channeltextview QUPM.separator0
popup.addSeparator channeltextview QUPM.separator0
popup.delitem -q channeltextview QUPM.controls

# We $escape the path else the KVS interpreter will strip the single slash when context menu is called in Windows
popup.addExtPopup channeltextview QUPM.controls "PM Manager" $escape($file.localdir(pics/pmmanager_small.png)) QUPM.controls
